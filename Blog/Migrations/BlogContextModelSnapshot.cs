// <auto-generated />
using System;
using Blog.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Blog.API.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeOfCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "Hallo, ich heiße Noah",
                            TimeOfCreation = new DateTime(2023, 11, 19, 11, 33, 0, 249, DateTimeKind.Local).AddTicks(4199),
                            Title = "Noahs Post"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Content = "Lorem ipsum",
                            TimeOfCreation = new DateTime(2023, 11, 19, 11, 33, 0, 249, DateTimeKind.Local).AddTicks(4248),
                            Title = "Tobias' Post"
                        });
                });

            modelBuilder.Entity("Blog.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Noah",
                            LastName = "Siess"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Tobias",
                            LastName = "Loacker"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Adrian",
                            LastName = "Bernhard"
                        });
                });

            modelBuilder.Entity("Blog.API.Entities.Post", b =>
                {
                    b.HasOne("Blog.API.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
